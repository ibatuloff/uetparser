services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: api
    ports:
      - 8888:8888
    command: poetry run uvicorn api.main:app --reload --host 0.0.0.0 --port 8888 --reload
    volumes:
      - ./api:/app/api
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      
  worker:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: worker
    command: poetry run celery -A api.worker.celery_app worker --loglevel=info --pool threads --concurrency 8
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DATABASE_URL=${DATABASE_URL}
      

    depends_on:
      db:
        condition: service_healthy
      redis: 
        condition: service_healthy
      

  redis:
    image: redis:7
    container_name: redis
    volumes:
      - redisdata:/data
    ports: 
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 5

  db:
    image: 'postgres:15'
    container_name: parser_db
    environment:
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PSWD}
    volumes:
        - ./pgdata:/var/lib/postgresql/data
    ports:
        - '5432:5432'
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U admin -d parser_db"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
    
volumes:
  pgdata:
  redisdata:
